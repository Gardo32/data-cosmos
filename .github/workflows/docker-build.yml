name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # Make sure to use lowercase repository name
  IMAGE_NAME: ${{ github.repository_owner }}/data-cosmos

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Add ALL necessary permissions
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Ensure package visibility matches repository
      - name: Set package visibility
        run: |
          echo "Setting up package visibility"
          if [ -z "$(gh api repos/${{ github.repository }} --jq '.visibility')" ]; then
            echo "⚠️ Could not determine repository visibility"
          else
            echo "Repository is $(gh api repos/${{ github.repository }} --jq '.visibility')"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      # Enhanced login with better error reporting
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.LLM_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,format=short
            latest

      - name: Create .env file
        run: |
          cat > .env << EOF
          FLASK_ENV=production
          FLASK_DEBUG=0
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          TEMP_FOLDER=temp
          UPLOAD_FOLDER=temp/datacosmos
          DATA_FOLDER=temp/datacosmos/data
          MAX_CONTENT_LENGTH=16777216
          MAX_AGE_HOURS=1
          ALLOWED_EXTENSIONS=jpg,jpeg,png,gif
          LLM_MODEL=${{ secrets.LLM_MODEL }}
          LLM_TOKEN=${{ secrets.LLM_TOKEN }}
          LLM_ENDPOINT=${{ secrets.LLM_ENDPOINT }}
          POLLEN_API_KEY=${{ secrets.POLLEN_API_KEY }}
          GEOPY_USER_AGENT=biopixel
          MAPTILER_API_KEY=${{ secrets.MAPTILER_API_KEY }}
          WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
          NASA_API_KEY=${{ secrets.NASA_API_KEY }}
          WEATHER_API_REALTIME_URL=${{ secrets.WEATHER_API_REALTIME_URL }}
          WEATHER_API_HISTORY_URL=${{ secrets.WEATHER_API_HISTORY_URL }}
          WEATHER_API_FORECAST_URL=${{ secrets.WEATHER_API_FORECAST_URL }}
          NASA_API_URL=${{ secrets.NASA_API_URL }}
          EOF

      # Output more detailed error info
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      # Make the package public if needed
      - name: Make package public
        if: github.event_name != 'pull_request'
        run: |
          echo "🔐 Setting package visibility to public..."
          PACKAGE_NAME=$(echo "${{ github.repository_owner }}/data-cosmos" | tr '[:upper:]' '[:lower:]')
          gh api --method PATCH /user/packages/container/$PACKAGE_NAME/visibility \
            -f visibility="public" || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}